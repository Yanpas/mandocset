# This is a basic workflow to help you get started with Actions

name: Build-Linux-man-pages

# Controls when the action will run. 
on: [push, pull_request, create]

env:
  LINUX_VERSION: "5.11"
  LINUX_SRC: "https://mirrors.edge.kernel.org/pub/linux/docs/man-pages/"
  # It's not possible to access env in the same environment https://github.community/t/how-to-use-env-context/16975/2
  LINUX_FILE: 'man-pages-$LINUX_VERSION.tar.xz'
  POSIX_VERSION: "2017"
  POSIX_SRC: "https://mirrors.edge.kernel.org/pub/linux/docs/man-pages/man-pages-posix/"
  # It's not possible to access env in the same environment https://github.community/t/how-to-use-env-context/16975/2
  POSIX_FILE: 'man-pages-posix-$POSIX_VERSION-a.tar.xz'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest      
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Runs a single command using the runners shell
      - name: Install deps
        run: sudo apt update &&
          sudo apt install -y 
          man2html 
          wget 
          zip

      # Runs a set of commands using the runners shell
      - name: Download and unpack Linux
        run: |
            wget -nv "$LINUX_SRC/${{env.LINUX_FILE}}"
            tar xvf ${{env.LINUX_FILE}}

      - name: Download and unpack POSIX
        run: |
            wget -nv "$POSIX_SRC/${{env.POSIX_FILE}}"
            tar xvf ${{env.POSIX_FILE}}

      - name: Build
        run: python3 mandocset.py -o Linux -p man-pages-$LINUX_VERSION man-pages-posix-$POSIX_VERSION -i etc/tux.png -I etc/tux@2x.png 

      - name: Pack
        run: zip -r Linux.zip Linux.docset

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Linux-manpage-docset
          path: |
            Linux.zip

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Linux.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}